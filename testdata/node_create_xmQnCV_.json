{
    "Options": {
        "Methods": [
            "POST"
        ],
        "ParameterDescription": {
            "Boolean": "For true return type true or 1, for false type false or 0",
            "Uri": "Absolute or relative URL, restricted to Locator(s) of the supplied URL if not null.   Up to a MAX_LENGTH in length.",
            "Text": "Variable length text from MIN_CHARS to MAX_CHARS (MAX_CHARS = INFINITY meaning arbitrary length)",
            "Varchar": "Variable length text from MIN_CHARS to MAX_CHARS (MAX_CHARS = INFINITY meaning arbitrary length)",
            "Array": "An indexed array of values with a length in the range MIN_COUNT to MAX_COUNT, inclusive.",
            "Select": "Select one option. Options should pass only the \"Value\"."
        },
        "Parameters": {
            "POST": [
                {
                    "Name": "AutoRename",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": false,
                    "Description": "Whether to automatically generate a unique UrlName if the given UrlName already exists.",
                    "Type": "Boolean"
                },
                {
                    "Name": "CoverImageUri",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Type": "Uri",
                    "MAX_LENGTH": "INFINITY",
                    "Locator": [
                        "Image"
                    ]
                },
                {
                    "Name": "Description",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Description": "Human-readable description for this node. May contain basic HTML. Some node types display this to the user; some merely use it for search engine optimization.",
                    "Type": "Text",
                    "MIN_CHARS": 0,
                    "MAX_CHARS": 65535,
                    "Value": ""
                },
                {
                    "Name": "HideOwner",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": false,
                    "Description": "Whether to hide the identity of this node's owner from visitors. Only applicable to Album nodes.",
                    "Type": "Boolean",
                    "Value": false
                },
                {
                    "Name": "HighlightImageUri",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Type": "Uri",
                    "MAX_LENGTH": "INFINITY",
                    "Locator": [
                        "Image"
                    ]
                },
                {
                    "Name": "Name",
                    "Required": true,
                    "ReadOnly": false,
                    "Default": null,
                    "Description": "Human-readable name for this node.",
                    "Type": "Varchar",
                    "MIN_CHARS": 1,
                    "MAX_CHARS": 254,
                    "Value": "C"
                },
                {
                    "Name": "Keywords",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": [],
                    "Description": "Array of keywords describing the content of this node. Some node types use this for search engine optimization.",
                    "Type": "Array",
                    "ITEM_TYPE": "Varchar",
                    "MIN_COUNT": 0,
                    "MAX_COUNT": "INFINITY",
                    "Value": []
                },
                {
                    "Name": "Password",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Type": "Varchar",
                    "MIN_CHARS": 0,
                    "MAX_CHARS": 50,
                    "Value": ""
                },
                {
                    "Name": "PasswordHint",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Type": "Varchar",
                    "MIN_CHARS": 0,
                    "MAX_CHARS": 255,
                    "Value": ""
                },
                {
                    "Name": "Privacy",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "Unlisted",
                    "Description": "Privacy level for this node. NOTE: This may be overridden by a more restrictive privacy setting inherited from one of this node's ancestors. See EffectivePrivacy.",
                    "Type": "Select",
                    "OPTIONS": [
                        "Public",
                        "Unlisted",
                        "Private"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "Unlisted"
                },
                {
                    "Name": "SecurityType",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "None",
                    "Description": "Security type for this node. NOTE: This may be overridden by a more restrictive security setting inherited from one of this node's ancestors. See EffectiveSecurityType.",
                    "Type": "Select",
                    "OPTIONS": [
                        "None",
                        "Password",
                        "GrantAccess"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "None"
                },
                {
                    "Name": "ShowCoverImage",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": true,
                    "Description": "Whether or not to display the cover image when possible.",
                    "Type": "Boolean",
                    "Value": true
                },
                {
                    "Name": "SmugSearchable",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "Inherit from User",
                    "Description": "Acceptable values differ for root nodes and child nodes.\n\nRoot nodes: No, Local, LocalUser, Yes\nChild nodes: No, Inherit from User",
                    "Type": "Select",
                    "OPTIONS": [
                        "No",
                        "Local",
                        "LocalUser",
                        "Yes",
                        "Inherit from User"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "Inherit from User"
                },
                {
                    "Name": "SortDirection",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "Descending",
                    "Type": "Select",
                    "OPTIONS": [
                        "Ascending",
                        "Descending"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "Descending"
                },
                {
                    "Name": "SortMethod",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "DateModified",
                    "Type": "Select",
                    "OPTIONS": [
                        "SortIndex",
                        "Name",
                        "DateAdded",
                        "DateModified"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "DateModified"
                },
                {
                    "Name": "Type",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "Folder",
                    "Type": "Select",
                    "OPTIONS": [
                        "Album",
                        "Page",
                        "Folder"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "Album"
                },
                {
                    "Name": "UrlName",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Description": "This is usually a URL-friendly version of the human-readable name. Must start with a capital letter.",
                    "Type": "Varchar",
                    "MIN_CHARS": 1,
                    "MAX_CHARS": 60,
                    "Value": "C"
                },
                {
                    "Name": "WorldSearchable",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": "Inherit from User",
                    "Description": "Acceptable values differ for root nodes and child nodes.\n\nRoot nodes: No, HomeOnly, Yes\nChild nodes: No, Inherit from User",
                    "Type": "Select",
                    "OPTIONS": [
                        "No",
                        "HomeOnly",
                        "Yes",
                        "Inherit from User"
                    ],
                    "MIN_COUNT": 1,
                    "MAX_COUNT": 1,
                    "Value": "Inherit from User"
                },
                {
                    "Name": "AlbumTemplateUri",
                    "Required": false,
                    "ReadOnly": false,
                    "Default": null,
                    "Description": "Specify default album presets by providing an AlbumTemplateUri. Only applicable for Type=Album.",
                    "Type": "Uri",
                    "MAX_LENGTH": "INFINITY",
                    "Locator": [
                        "AlbumTemplate"
                    ]
                }
            ]
        }
    },
    "Response": {
        "Uri": "/api/v2/node/xmQnCV",
        "Locator": "Node",
        "LocatorType": "Object",
        "Node": {
            "Description": "",
            "HideOwner": false,
            "Name": "C",
            "Keywords": [],
            "Password": "",
            "PasswordHint": "",
            "Privacy": "Unlisted",
            "SecurityType": "None",
            "ShowCoverImage": true,
            "SmugSearchable": "Inherit from User",
            "SortDirection": "Descending",
            "SortMethod": "DateModified",
            "Type": "Album",
            "UrlName": "C",
            "WorldSearchable": "Inherit from User",
            "DateAdded": "2021-08-14T17:47:01+00:00",
            "DateModified": "2021-08-14T17:47:01+00:00",
            "EffectivePrivacy": "Unlisted",
            "EffectiveSecurityType": "None",
            "FormattedValues": {
                "Name": {
                    "html": "C"
                },
                "Description": {
                    "html": "",
                    "text": ""
                }
            },
            "HasChildren": false,
            "IsRoot": false,
            "NodeID": "xmQnCV",
            "UrlPath": "/Blogging/C",
            "Uri": "/api/v2/node/xmQnCV",
            "WebUri": "https://photos.example.com/C/n-xmQnCV",
            "UriDescription": "Node with the given id.",
            "Uris": {
                "Album": {
                    "Uri": "/api/v2/album/nkm9b5",
                    "Locator": "Album",
                    "LocatorType": "Object",
                    "UriDescription": "Album by key",
                    "EndpointType": "Album"
                },
                "ParentNode": {
                    "Uri": "/api/v2/node/xmQnCV!parent",
                    "Locator": "Node",
                    "LocatorType": "Object",
                    "UriDescription": "Parent node of the given node.",
                    "EndpointType": "ParentNode"
                },
                "ParentNodes": {
                    "Uri": "/api/v2/node/xmQnCV!parents",
                    "Locator": "Node",
                    "LocatorType": "Objects",
                    "UriDescription": "Hierarchy of nodes from the given node (inclusive) to the root node.",
                    "EndpointType": "ParentNodes"
                },
                "User": {
                    "Uri": "/api/v2/user/zimmer",
                    "Locator": "User",
                    "LocatorType": "Object",
                    "UriDescription": "User By Nickname",
                    "EndpointType": "User"
                },
                "NodeCoverImage": {
                    "Uri": "/api/v2/node/xmQnCV!cover",
                    "Locator": "Image",
                    "LocatorType": "Object",
                    "UriDescription": "Cover image for a folder, album, or page",
                    "EndpointType": "NodeCoverImage"
                },
                "HighlightImage": {
                    "Uri": "/api/v2/highlight/node/xmQnCV",
                    "Locator": "Image",
                    "LocatorType": "Object",
                    "UriDescription": "Highlight image for a folder, album, or page",
                    "EndpointType": "HighlightImage"
                },
                "NodeComments": {
                    "Uri": "/api/v2/node/xmQnCV!comments",
                    "Locator": "Comment",
                    "LocatorType": "Objects",
                    "UriDescription": "Comments on a Node",
                    "EndpointType": "NodeComments"
                },
                "NodeGrants": {
                    "Uri": "/api/v2/node/xmQnCV!grants",
                    "Locator": "Grant",
                    "LocatorType": "Objects",
                    "UriDescription": "Grants for this node.",
                    "EndpointType": "NodeGrants"
                }
            },
            "ResponseLevel": "Full"
        },
        "UriDescription": "Node with the given id.",
        "EndpointType": "Node"
    },
    "Code": 201,
    "Message": "Created"
}
